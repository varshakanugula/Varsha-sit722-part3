# Your Solution
apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-catalog
  template:
    metadata:
      labels:
        app: book-catalog
    spec:
      containers: 
      - name: book-catalog
      ports:
        - containerPort: 4000
      command: ["uvicorn"]
      args: ["app.main:app", "--host", "0.0.0.0", "--port", "4000"]
      image: task72.azurecr.io/book-catalog
      imagePullPolicy: IfNotPresent
      env:
        - name: PORT
          value: 4000
        - name: DATABASE_URL
          value: "postgresql://varsha_task72c_user:FfZ5uRByk6UXXfo8pncYPopEnSJZgsoz@dpg-crmo9iq3esus7380rlrg-a.oregon-postgres.render.com/varsha_task72c"
---
apiVersion: v1
kind: Service
metadata:
  name: book-catalog
spec:
  selector:
    app: book-catalog
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers: 
      - name: inventory-management
      ports:
        - containerPort: 3000
      command: ["uvicorn"]
      args: ["app.main:app", "--host", "0.0.0.0", "--port", "3000"]
      image: task72.azurecr.io/inventory-management
      imagePullPolicy: IfNotPresent
      env:
        - name: PORT
          value: 3000
        - name: DATABASE_URL
          value: "postgresql://varsha_task72c_user:FfZ5uRByk6UXXfo8pncYPopEnSJZgsoz@dpg-crmo9iq3esus7380rlrg-a.oregon-postgres.render.com/varsha_task72c"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-management
spec:
  selector:
    app: inventory-management
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000