# Your Solution
apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-catalog
  template:
    metadata:
      labels:
        app: book-catalog
    spec:
      containers: 
      - name: book-catalog
        image: vk2610.azurecr.io/book-catalog
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          value: "postgresql://project_part3_lebe_user:qsTRAQ7P79IsjJFMgoDuGXWTNycbA4Rk@dpg-crn5v868ii6s73el93m0-a.oregon-postgres.render.com/project_part3_lebe"
---
apiVersion: v1
kind: Service
metadata:
  name: book-catalog
spec:
  selector:
    app: book-catalog
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4000


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-management
  template:
    metadata:
      labels:
        app: inventory-management
    spec:
      containers: 
      - name: inventory-management
        image: vk2610.azurecr.io/inventory-management
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          value: "postgresql://project_part3_lebe_user:qsTRAQ7P79IsjJFMgoDuGXWTNycbA4Rk@dpg-crn5v868ii6s73el93m0-a.oregon-postgres.render.com/project_part3_lebe"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-management
spec:
  selector:
    app: inventory-management
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000